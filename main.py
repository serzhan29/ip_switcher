import sys
import subprocess
import json
import os
import psutil
from PyQt5.QtWidgets import (
    QApplication, QWidget, QPushButton, QVBoxLayout, QLabel,
    QMessageBox, QInputDialog, QGroupBox, QGridLayout, QComboBox
)
from PyQt5.QtGui import QFont

CONFIG_FILE = "ip_config.json"


class IPManager(QWidget):
    def __init__(self):
        super().__init__()
        self.setWindowTitle("IP Switcher")
        self.setGeometry(200, 200, 500, 350)

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∞–¥–∞–ø—Ç–µ—Ä
        self.adapter = self.detect_adapter()
        if not self.adapter:
            QMessageBox.critical(self, "–û—à–∏–±–∫–∞", "‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω –∞–∫—Ç–∏–≤–Ω—ã–π —Å–µ—Ç–µ–≤–æ–π –∞–¥–∞–ø—Ç–µ—Ä —Å IPv4")
            sys.exit(1)

        # –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–ª–∏ —Å–æ–∑–¥–∞—ë–º –∫–æ–Ω—Ñ–∏–≥
        self.config = self.load_config()
        if not self.config:
            self.config = self.ask_config()
            self.save_config(self.config)

        # –û—Å–Ω–æ–≤–Ω–æ–π layout
        layout = QVBoxLayout()

        self.label = QLabel(f"‚öôÔ∏è –í—ã–±—Ä–∞–Ω –∞–¥–∞–ø—Ç–µ—Ä: {self.adapter}")
        self.label.setFont(QFont("Arial", 12))
        layout.addWidget(self.label)

        # --- –ë–ª–æ–∫ –∫–Ω–æ–ø–æ–∫ ---
        btn_dhcp = QPushButton("–í–∫–ª—é—á–∏—Ç—å DHCP (–ª–æ–∫–∞–ª–∫–∞)")
        btn_dhcp.clicked.connect(self.set_dhcp)
        layout.addWidget(btn_dhcp)

        btn_static = QPushButton("–í–∫–ª—é—á–∏—Ç—å –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π IP (–∏–Ω—Ç–µ—Ä–Ω–µ—Ç)")
        btn_static.clicked.connect(self.set_static)
        layout.addWidget(btn_static)

        btn_edit = QPushButton("–ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏")
        btn_edit.clicked.connect(self.edit_config)
        layout.addWidget(btn_edit)

        btn_change_adapter = QPushButton("–í—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–π –∞–¥–∞–ø—Ç–µ—Ä")
        btn_change_adapter.clicked.connect(self.change_adapter)
        layout.addWidget(btn_change_adapter)

        # --- –ë–ª–æ–∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–µ–∫—É—â–∏—Ö –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö ---
        info_group = QGroupBox("–¢–µ–∫—É—â–∏–µ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏")
        info_layout = QGridLayout()

        self.ip_label = QLabel()
        self.mask_label = QLabel()
        self.gw_label = QLabel()
        self.dns_label = QLabel()

        info_layout.addWidget(QLabel("IP –∞–¥—Ä–µ—Å:"), 0, 0)
        info_layout.addWidget(self.ip_label, 0, 1)

        info_layout.addWidget(QLabel("–ú–∞—Å–∫–∞ –ø–æ–¥—Å–µ—Ç–∏:"), 1, 0)
        info_layout.addWidget(self.mask_label, 1, 1)

        info_layout.addWidget(QLabel("–®–ª—é–∑:"), 2, 0)
        info_layout.addWidget(self.gw_label, 2, 1)

        info_layout.addWidget(QLabel("DNS:"), 3, 0)
        info_layout.addWidget(self.dns_label, 3, 1)

        info_group.setLayout(info_layout)
        layout.addWidget(info_group)

        self.setLayout(layout)

        # –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ-–ø–∞–Ω–µ–ª—å
        self.update_info()

    def detect_adapter(self):
        """–û–ø—Ä–µ–¥–µ–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π —Å–µ—Ç–µ–≤–æ–π –∞–¥–∞–ø—Ç–µ—Ä —Å IPv4"""
        adapters = []
        for adapter, addrs in psutil.net_if_addrs().items():
            for addr in addrs:
                if addr.family == 2 and not addr.address.startswith("169.254"):  # IPv4 + –Ω–µ APIPA
                    adapters.append(adapter)

        if not adapters:
            return None
        elif len(adapters) == 1:
            return adapters[0]
        else:
            # –ï—Å–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∞–¥–∞–ø—Ç–µ—Ä–æ–≤ ‚Äî —Å–ø—Ä–æ—Å–∏–º —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            adapter, ok = QInputDialog.getItem(
                self, "–í—ã–±–æ—Ä –∞–¥–∞–ø—Ç–µ—Ä–∞", "–ù–∞–π–¥–µ–Ω–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∞–¥–∞–ø—Ç–µ—Ä–æ–≤. –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω:", adapters, 0, False
            )
            return adapter if ok else None

    def load_config(self):
        if os.path.exists(CONFIG_FILE):
            with open(CONFIG_FILE, "r") as f:
                return json.load(f)
        return None

    def save_config(self, config):
        with open(CONFIG_FILE, "w") as f:
            json.dump(config, f, indent=4)

    def ask_config(self):
        ip, _ = QInputDialog.getText(self, "IP", "–í–≤–µ–¥–∏—Ç–µ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π IP:")
        mask, _ = QInputDialog.getText(self, "–ú–∞—Å–∫–∞", "–í–≤–µ–¥–∏—Ç–µ –º–∞—Å–∫—É –ø–æ–¥—Å–µ—Ç–∏:", text="255.255.255.0")
        gw, _ = QInputDialog.getText(self, "–®–ª—é–∑", "–í–≤–µ–¥–∏—Ç–µ —à–ª—é–∑:")
        dns, _ = QInputDialog.getText(self, "DNS", "–í–≤–µ–¥–∏—Ç–µ DNS:", text="8.8.8.8")
        return {"STATIC_IP": ip, "SUBNET_MASK": mask, "GATEWAY": gw, "DNS": dns}

    def set_dhcp(self):
        subprocess.run(f'netsh interface ip set address name="{self.adapter}" source=dhcp', shell=True)
        subprocess.run(f'netsh interface ip set dns name="{self.adapter}" source=dhcp', shell=True)
        QMessageBox.information(self, "–£—Å–ø–µ—Ö", f"‚úÖ DHCP –≤–∫–ª—é—á—ë–Ω –Ω–∞ {self.adapter}")

    def set_static(self):
        cfg = self.config
        subprocess.run(
            f'netsh interface ip set address name="{self.adapter}" static {cfg["STATIC_IP"]} {cfg["SUBNET_MASK"]} {cfg["GATEWAY"]}',
            shell=True
        )
        subprocess.run(f'netsh interface ip set dns name="{self.adapter}" static {cfg["DNS"]}', shell=True)
        QMessageBox.information(self, "–£—Å–ø–µ—Ö", f'‚úÖ –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π IP –≤–∫–ª—é—á—ë–Ω: {cfg["STATIC_IP"]}')

    def edit_config(self):
        self.config = self.ask_config()
        self.save_config(self.config)
        self.update_info()
        QMessageBox.information(self, "–û–±–Ω–æ–≤–ª–µ–Ω–æ", "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã.")

    def change_adapter(self):
        """–ü–æ–∑–≤–æ–ª—è–µ—Ç –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–π –∞–¥–∞–ø—Ç–µ—Ä"""
        adapters = list(psutil.net_if_addrs().keys())
        adapter, ok = QInputDialog.getItem(self, "–°–º–µ–Ω–∞ –∞–¥–∞–ø—Ç–µ—Ä–∞", "–í—ã–±–µ—Ä–∏—Ç–µ –∞–¥–∞–ø—Ç–µ—Ä:", adapters, 0, False)
        if ok and adapter:
            self.adapter = adapter
            self.label.setText(f"‚öôÔ∏è –í—ã–±—Ä–∞–Ω –∞–¥–∞–ø—Ç–µ—Ä: {self.adapter}")
            QMessageBox.information(self, "–ì–æ—Ç–æ–≤–æ", f"üîÑ –¢–µ–ø–µ—Ä—å –≤—ã–±—Ä–∞–Ω –∞–¥–∞–ø—Ç–µ—Ä: {self.adapter}")

    def update_info(self):
        """–û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –≤ –æ–∫–Ω–µ"""
        if self.config:
            self.ip_label.setText(self.config.get("STATIC_IP", "‚Äî"))
            self.mask_label.setText(self.config.get("SUBNET_MASK", "‚Äî"))
            self.gw_label.setText(self.config.get("GATEWAY", "‚Äî"))
            self.dns_label.setText(self.config.get("DNS", "‚Äî"))


if __name__ == "__main__":
    app = QApplication(sys.argv)
    window = IPManager()
    window.show()
    sys.exit(app.exec_())
